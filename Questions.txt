Basic:
1. Retrieve the total number of orders placed.
ans -> select count(*) from orders;
2. Calculate the total revenue generated from pizza sales.
ans -> 
SELECT round(
        sum(
            order_details.quantity * pizzas.price
        ), 2
    ) AS totalrevenue
FROM pizzas
    INNER JOIN order_details ON pizzas.pizza_id = order_details.pizza_id;

3. Identify the highest-priced pizza.
SELECT pizza_types.name pizza_id, max(price)
FROM pizzas
    INNER JOIN pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id;
4. Identify the most common pizza size ordered.
select count(order_details.order_details_id) as sums, pizzas.size from pizzas
inner join order_details on 
pizzas.pizza_id = order_details.pizza_id
group by size
order by sums desc limit 1;

List the top 5 most ordered pizza types along with their quantities.

select pizza_types.name, sum(order_details.quantity) as totalqty from order_details
inner join pizzas on order_details.pizza_id = pizzas.pizza_id 
inner join pizza_types on pizzas.pizza_type_id = pizza_types.pizza_type_id
group by pizzas.pizza_type_id
order by totalqty desc limit 5;

Intermediate:
Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT pizza_types.category, sum(order_details.quantity)
FROM
    pizza_types
    INNER JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
    INNER JOIN order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY
    pizza_types.category;

Determine the distribution of orders by hour of the day.
select  hour(time) as hour,count(hour(time)) as ordered_counts from orders
group by hour(time)

Join relevant tables to find the category-wise distribution of pizzas.
select category, count(name) from pizza_types
group by category;

Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT round(AVG(quantity), 0) AS average_quantity
FROM (
        SELECT orders.date, SUM(order_details.quantity) AS quantity
        FROM orders
            JOIN order_details ON orders.order_id = order_details.order_id
        GROUP BY
            orders.date
    ) AS boy;

Determine the top 3 most ordered pizza types based on revenue.

SELECT pizza_types.name, sum(pizzas.price*order_details.quantity) as totalsum from pizza_types
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.pizza_type_id
order by totalsum desc limit 3;


Advanced:
Calculate the percentage contribution of each pizza type to total revenue.
SELECT pizza_types.name, 
           round(SUM(pizzas.price * order_details.quantity)/(
    SELECT  
           SUM(pizzas.price * order_details.quantity)
    FROM pizza_types
    JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
    JOIN order_details ON pizzas.pizza_id = order_details.pizza_id
)*100,2) AS totalsum
    FROM pizza_types
    JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
    JOIN order_details ON pizzas.pizza_id = order_details.pizza_id
    GROUP BY pizza_types.pizza_type_id;
Analyze the cumulative revenue generated over time.

Determine the top 3 most ordered pizza types based on revenue for each pizza category.
